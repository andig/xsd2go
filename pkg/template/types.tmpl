// Package {{.GoPackageName}} contains models for {{ .TargetNamespace }}
{{$packageName := .GoPackageName -}}
package {{ $packageName }}

// XSD Elements declarations
{{range .ExportableElements }}
  // {{ .GoName }} element
  type {{ .GoName }} struct {
    // `json:"{{.Name}}"`
    {{- range .Attributes }}
        {{ .GoName }} {{.GoForeignModule}}{{.GoType}} `json:"{{.XmlName}},{{.Modifiers}}"`
    {{- end -}}
    {{ range .Elements }}
      {{ .GoFieldName}} {{.GoMemLayout}}{{.GoForeignModule}}{{ .GoTypeName }} `json:"{{.XmlName}}"`
    {{- end -}}
    {{- if .ContainsText }}
      Text string `json:",chardata"`
    {{- end}}
  }

{{end}}


// XSD ComplexType declarations
{{range .ExportableComplexTypes }}
  type {{ .GoName }} struct {
  {{ range .Attributes }}
      {{ .GoName }} {{.GoForeignModule}}{{.GoType}} `json:"{{.XmlName}},{{.Modifiers}}"`
  {{- end}}

  {{ range .Elements }}
    {{ .GoFieldName}} {{.GoMemLayout}}{{.GoForeignModule}}{{ .GoTypeName }} `json:"{{.XmlName}}"`
  {{- end}}

  {{- if .ContainsText }}
    Text string `json:",chardata"`
  {{- end}}
  }
{{end}}

// XSD SimpleType declarations
{{range .ExportableSimpleTypes }}
  // {{ .GoName }} type
  type {{ .GoName }} string

  {{ $simpleType := . }}
  {{ if .Enums }}
  // {{ .GoName }} constants
  const({{ end }}
  {{ range .Enums }}
    {{ $simpleType.GoName -}} {{- .GoName }} {{ $simpleType.GoName }} = "{{ .XmlName }}"
  {{- end }}
  {{ if .Enums }}){{ end }}
{{end}}
