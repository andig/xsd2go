// Package {{.GoPackageName}} contains models for {{ .TargetNamespace }}
{{$packageName := .GoPackageName -}}
package message

// Code generated by github.com/andig/xsd2go. DO NOT EDIT.

import "github.com/andig/evcc/hems/eebus/util"

// xs:element declarations
{{range .ExportableElements }}
  // Cmi{{ .GoName }} message container
  type Cmi{{ .GoName }} struct {
    {{ .GoName }} {{ .GoName }} `json:"{{.Name}}"`
  }

  // {{ .GoName }} element
  type {{ .GoName }} struct {
    {{- range .Attributes }}
        {{ .GoName }} {{.GoForeignModule}}{{.GoType}} `json:"{{.XmlName}}"` // ,{{.Modifiers}}
    {{- end -}}
    {{ range .Elements }}
      {{ .GoFieldName}} {{.GoMemLayout}}{{.GoForeignModule}}{{ .GoTypeName }} `json:"{{.XmlName}}{{if eq .GoMemLayout "*"}},omitempty{{end}}"`
    {{- end -}}
    {{- if .ContainsText }}
      Text string `json:",chardata"`
    {{- end}}
  }

  // MarshalJSON is the SHIP serialization marshaller
  func (m {{ .GoName }}) MarshalJSON() ([]byte, error) {
    return util.Marshal(m)
  }

  // UnmarshalJSON is the SHIP serialization unmarshaller
  func (m *{{ .GoName }}) UnmarshalJSON(data []byte) error {
    return util.Unmarshal(data, &m)
  }
{{end}}

// xs:complexType declarations
{{range .ExportableComplexTypes }}
  // {{ .GoName }} complex type
  type {{ .GoName }} struct {
  {{ range .Attributes }}
      {{ .GoName }} {{.GoForeignModule}}{{.GoType}} `json:"{{.XmlName}}"`
  {{- end}}

  {{ range .Elements }}
    {{ .GoFieldName}} {{.GoMemLayout}}{{.GoForeignModule}}{{ .GoTypeName }} `json:"{{.XmlName}}"`
  {{- end}}
  }

  // MarshalJSON is the SHIP serialization marshaller
  func (m {{ .GoName }}) MarshalJSON() ([]byte, error) {
    return util.Marshal(m)
  }

  // UnmarshalJSON is the SHIP serialization unmarshaller
  func (m *{{ .GoName }}) UnmarshalJSON(data []byte) error {
    return util.Unmarshal(data, &m)
  }
{{end}}

// xs:simpleType declarations
{{range .ExportableSimpleTypes }}
  // {{ .GoName }} type
  type {{ .GoName }} string

  {{ $simpleType := . }}
  {{ if .Enums }}
  // {{ .GoName }} constants
  const({{ end }}
  {{ range .Enums }}
    {{ $simpleType.GoName -}} {{- .GoName }} {{ $simpleType.GoName }} = "{{ .XmlName }}"
  {{- end }}
  {{ if .Enums }}){{ end }}
{{end}}
